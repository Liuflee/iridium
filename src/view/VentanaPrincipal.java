/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import com.formdev.flatlaf.intellijthemes.FlatDarkPurpleIJTheme;
import com.formdev.flatlaf.intellijthemes.FlatDraculaIJTheme;
import com.formdev.flatlaf.intellijthemes.FlatMonokaiProIJTheme;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import controller.RegistroPropiedades;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.LookAndFeel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.Propiedad;
import model.Vendedor;

/**
 *
 * @author Sumir
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    

    /**
     * Creates new form PrincipalVariante
     */
    
    RegistroPropiedades reg = new RegistroPropiedades();
    public VentanaPrincipal() {
        
        initComponents();
        
        actualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtfBusqueda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePropiedades = new javax.swing.JTable();
        btnEliminarSelected = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuAgregar = new javax.swing.JMenu();
        mniAgregarCasa = new javax.swing.JMenuItem();
        mniAgregarDpto = new javax.swing.JMenuItem();
        menuModificar = new javax.swing.JMenu();
        mnuiModificar = new javax.swing.JMenuItem();
        menuEliminar = new javax.swing.JMenu();
        mnuiEliminar = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        mnuiDracula = new javax.swing.JMenuItem();
        mnuiLight = new javax.swing.JMenuItem();
        mnuiMonokai = new javax.swing.JMenuItem();
        mnuiDefault = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("texto de ejemplo");

        txtfBusqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfBusquedaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfBusquedaFocusLost(evt);
            }
        });

        jLabel1.setText("Lista de propiedades:");

        btnBuscar.setText("Buscar");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(583, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(txtfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnActualizar))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnActualizar)))
        );

        tablePropiedades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Tipo", "Habitaciones", "M2", "Precio", "Dirección", "Vendedor(a)", "RUT Vendedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePropiedades.setName(""); // NOI18N
        jScrollPane2.setViewportView(tablePropiedades);

        btnEliminarSelected.setText("Eliminar");
        btnEliminarSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarSelectedActionPerformed(evt);
            }
        });

        jMenuBar1.setBorder(null);

        menuAgregar.setText("Añadir");

        mniAgregarCasa.setText("Añadir Casa");
        mniAgregarCasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAgregarCasaActionPerformed(evt);
            }
        });
        menuAgregar.add(mniAgregarCasa);

        mniAgregarDpto.setText("Añadir Departamento");
        mniAgregarDpto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAgregarDptoActionPerformed(evt);
            }
        });
        menuAgregar.add(mniAgregarDpto);

        jMenuBar1.add(menuAgregar);

        menuModificar.setText("Modificar");

        mnuiModificar.setText("Modificar Seleccionado");
        mnuiModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiModificarActionPerformed(evt);
            }
        });
        menuModificar.add(mnuiModificar);

        jMenuBar1.add(menuModificar);

        menuEliminar.setText("Eliminar");
        menuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarActionPerformed(evt);
            }
        });

        mnuiEliminar.setText("Eliminar por codigo");
        mnuiEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiEliminarActionPerformed(evt);
            }
        });
        menuEliminar.add(mnuiEliminar);

        jMenuBar1.add(menuEliminar);

        jMenu1.setText("Cambiar Tema");

        mnuiDracula.setText("Dracula");
        mnuiDracula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiDraculaActionPerformed(evt);
            }
        });
        jMenu1.add(mnuiDracula);

        mnuiLight.setText("Light");
        mnuiLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiLightActionPerformed(evt);
            }
        });
        jMenu1.add(mnuiLight);

        mnuiMonokai.setText("Monokai");
        mnuiMonokai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiMonokaiActionPerformed(evt);
            }
        });
        jMenu1.add(mnuiMonokai);

        mnuiDefault.setText("Por Defecto");
        mnuiDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiDefaultActionPerformed(evt);
            }
        });
        jMenu1.add(mnuiDefault);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEliminarSelected)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarSelected)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void actualizar() {
    // Defino variables para rescatar del objeto propiedad y vendedor
    int codPropiedad, nroHabitaciones, metrosCuadrados, precio, rutVendedor;
    String nombrePropiedad, direccion, nombreVendedor, tipo;
 
    DefaultTableModel modelo = (DefaultTableModel) this.tablePropiedades.getModel();
    // Para que no se duplique la información
    modelo.setRowCount(0);
    ArrayList<Propiedad> listaPropiedades = reg.obtenerDatosPropiedades();

    for (Propiedad propiedad : listaPropiedades) {
        codPropiedad = propiedad.getCodigo();
        nombrePropiedad = propiedad.getNombrePropiedad();
        nroHabitaciones = propiedad.getHabitaciones();
        metrosCuadrados = propiedad.getMetrosCuadrados();
        tipo = propiedad.getTipo();
        precio = propiedad.getPrecio();
        direccion = propiedad.getDireccion();

        Vendedor vendedor = propiedad.getVendedor();
        nombreVendedor = vendedor.getNombre();
        rutVendedor = vendedor.getRut();

        modelo.addRow(new Object[]{codPropiedad, nombrePropiedad, tipo , nroHabitaciones, metrosCuadrados, precio, direccion, nombreVendedor, rutVendedor});
    }
}
    
    public Object[] getDatos() {
        
        int filaSeleccionada = tablePropiedades.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) tablePropiedades.getModel();
        int numColumnas = modelo.getColumnCount();
        Object[] datosFila = new Object[numColumnas];

        for (int i = 0; i < numColumnas; i++) {
            datosFila[i] = modelo.getValueAt(filaSeleccionada, i);
        }
    
        return datosFila;
    }

    
    private void mniAgregarCasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAgregarCasaActionPerformed
        // TODO add your handling code here:
        AgregarVentana ventanaAgregar = new AgregarVentana(this, "Casa");
        int x = getX() + (getWidth() - ventanaAgregar.getWidth()) / 2;
        int y = getY() + (getHeight() - ventanaAgregar.getHeight()) / 2;

        ventanaAgregar.setLocation(x, y);
        ventanaAgregar.setVisible(true);
    }//GEN-LAST:event_mniAgregarCasaActionPerformed

    private void mniAgregarDptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAgregarDptoActionPerformed
        // TODO add your handling code here:
        AgregarVentana ventanaAgregar = new AgregarVentana(this, "Departamento");
        int x = getX() + (getWidth() - ventanaAgregar.getWidth()) / 2;
        int y = getY() + (getHeight() - ventanaAgregar.getHeight()) / 2;

        ventanaAgregar.setLocation(x, y);
        ventanaAgregar.setVisible(true);

    }//GEN-LAST:event_mniAgregarDptoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizar();  
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void mnuiEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiEliminarActionPerformed
        // TODO add your handling code here:
        Eliminar eliminar = new Eliminar(this);
        int x = getX() + (getWidth() - eliminar.getWidth()) / 2;
        int y = getY() + (getHeight() - eliminar.getHeight()) / 2;

        eliminar.setLocation(x, y);
        eliminar.setVisible(true);
    }//GEN-LAST:event_mnuiEliminarActionPerformed

    private void menuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_menuEliminarActionPerformed

    private void btnEliminarSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarSelectedActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablePropiedades.getSelectedRow();
        if (filaSeleccionada != -1) { 
            // Confirmar la eliminación
            UIManager.put("OptionPane.yesButtonText", "Sí");
            UIManager.put("OptionPane.noButtonText", "No");
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que quieres eliminar esta fila?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            // Verificar la opción seleccionada en el cuadro de diálogo de confirmación
            if (confirmacion == JOptionPane.YES_OPTION) {
                int codSeleccionado = (int) tablePropiedades.getValueAt(filaSeleccionada, 0);
                RegistroPropiedades registro = new RegistroPropiedades();
                registro.eliminarPropiedad(codSeleccionado);
                btnActualizarActionPerformed(evt);
            }
            // No hay necesidad de un else aquí para la opción "No"

        } else {
            // Si no hay fila seleccionada, mostrar mensaje de advertencia
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila para eliminar.", "Ninguna fila seleccionada", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarSelectedActionPerformed

    private void mnuiModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiModificarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablePropiedades.getSelectedRow();
        if (filaSeleccionada != -1) { // Verifica si hay una fila seleccionada
            Object[] datos = this.getDatos();
            ModificarVentana ventanaMod = new ModificarVentana(datos, this);
            int x = getX() + (getWidth() - ventanaMod.getWidth()) / 2;
            int y = getY() + (getHeight() - ventanaMod.getHeight()) / 2;

            ventanaMod.setLocation(x, y);
            ventanaMod.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila para modificar.", "Ninguna fila seleccionada", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnuiModificarActionPerformed

    private void txtfBusquedaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBusquedaFocusGained
        // TODO add your handling code here:
        if(txtfBusqueda.getText().equals("Ingrese codigo de propiedad:")) {
            txtfBusqueda.setText("");

        }
    }//GEN-LAST:event_txtfBusquedaFocusGained

    private void txtfBusquedaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBusquedaFocusLost
        // TODO add your handling code here:
        if(txtfBusqueda.getText().equals("")) {
            txtfBusqueda.setText("Ingrese codigo de propiedad:");
            txtfBusqueda.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtfBusquedaFocusLost
    
    private void cambiarTema(LookAndFeel tema) {
        try {
            UIManager.setLookAndFeel(tema);
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void mnuiDraculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiDraculaActionPerformed
        // TODO add your handling code here:
        cambiarTema(new FlatDraculaIJTheme());
        
    }//GEN-LAST:event_mnuiDraculaActionPerformed

    private void mnuiLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiLightActionPerformed
        // TODO add your handling code here:
        cambiarTema(new FlatMacLightLaf());
    }//GEN-LAST:event_mnuiLightActionPerformed

    private void mnuiMonokaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiMonokaiActionPerformed
        // TODO add your handling code here:
        cambiarTema(new FlatMonokaiProIJTheme());
    }//GEN-LAST:event_mnuiMonokaiActionPerformed

    private void mnuiDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiDefaultActionPerformed
        // TODO add your handling code here:
        cambiarTema(new FlatDarkPurpleIJTheme());
    }//GEN-LAST:event_mnuiDefaultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel de flatlaf ">

        try {
            UIManager.setLookAndFeel(new FlatDarkPurpleIJTheme());
        } catch (Exception e) {
            e.printStackTrace();
        }
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminarSelected;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu menuAgregar;
    private javax.swing.JMenu menuEliminar;
    private javax.swing.JMenu menuModificar;
    private javax.swing.JMenuItem mniAgregarCasa;
    private javax.swing.JMenuItem mniAgregarDpto;
    private javax.swing.JMenuItem mnuiDefault;
    private javax.swing.JMenuItem mnuiDracula;
    private javax.swing.JMenuItem mnuiEliminar;
    private javax.swing.JMenuItem mnuiLight;
    private javax.swing.JMenuItem mnuiModificar;
    private javax.swing.JMenuItem mnuiMonokai;
    private javax.swing.JTable tablePropiedades;
    private javax.swing.JTextField txtfBusqueda;
    // End of variables declaration//GEN-END:variables
}
